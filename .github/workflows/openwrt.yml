#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: Pi4B_OpenWrt
on:
  repository_dispatch:
  release:
    types: published
  push:
    branches:
      - master
    paths:
      - '.config'
#  schedule:
#    - cron: 0 8 * * 5
#  watch:
#    types: started

env:
  REPO_URL: https://github.com/hikelin19871112/lede.git
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  SSH_ACTIONS: false
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo swapoff /swapfile
        sudo rm -rf /swapfile /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        curl -fsSL https://raw.githubusercontent.com/P3TERX/dotfiles/master/.bashrc >> ~/.bashrc
    - name: Clone source code
      run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt

    - name: Load custom feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        ../$DIY_P1_SH
    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a
      
      name: Costom configure file
      run: |
        rm -f ./.config*
        touch ./.config
        #
        # ========================固件定制部分========================
        # 
        # 
        # 如果不对本区块做出任何编辑, 则生成默认配置固件. 
        # 
        # 以下为定制化固件选项和说明:
        #
        #
        # 有些插件/选项是默认开启的, 如果想要关闭, 请参照以下示例进行编写:
        # 
        #          =========================================
        #         |  # 取消编译VMware镜像:                   |
        #         |  cat >> .config <<EOF                   |
        #         |  # CONFIG_VMDK_IMAGES is not set        |
        #         |  EOF                                    |
        #          =========================================
        #
        # 
        # 以下是一些提前准备好的一些插件选项.
        # 直接取消注释相应代码块即可应用. 不要取消注释代码块上的汉字说明.
        # 如果不需要代码块里的某一项配置, 只需要删除相应行.
        #
        # 如果需要其他插件, 请按照示例自行添加.
        # 注意, 只需添加依赖链顶端的包. 如果你需要插件 A, 同时 A 依赖 B, 即只需要添加 A.
        # 
        # 无论你想要对固件进行怎样的定制, 都需要且只需要修改 EOF 回环内的内容.
        # 
        # 编译x64固件:
        cat >> .config <<EOF
        CONFIG_TARGET_bcm27xx=y
        CONFIG_TARGET_bcm27xx_bcm2711=y
        CONFIG_TARGET_bcm27xx_bcm2711_DEVICE_rpi-4=y
        EOF
        # 固件压缩:
        cat >> .config <<EOF
        CONFIG_TARGET_IMAGES_GZIP=y
        EOF
        # 编译UEFI固件:
        cat >> .config <<EOF
        CONFIG_EFI_IMAGES=y
        EOF
        # IPv6支持:
        cat >> .config <<EOF
        CONFIG_PACKAGE_dnsmasq_full_dhcpv6=y
        CONFIG_PACKAGE_ipv6helper=y
        EOF
        # 多文件系统支持:
        cat >> .config <<EOF
        CONFIG_PACKAGE_kmod-fs-nfs=y
        CONFIG_PACKAGE_kmod-fs-nfs-common=y
        CONFIG_PACKAGE_kmod-fs-nfs-v3=y
        CONFIG_PACKAGE_kmod-fs-nfs-v4=y
        CONFIG_PACKAGE_kmod-fs-ntfs=y
        CONFIG_PACKAGE_kmod-fs-squashfs=y
        EOF
        # USB3.0支持:
        cat >> .config <<EOF
        CONFIG_PACKAGE_kmod-usb-ohci=y
        CONFIG_PACKAGE_kmod-usb-ohci-pci=y
        CONFIG_PACKAGE_kmod-usb2=y
        CONFIG_PACKAGE_kmod-usb-uhci=y
        CONFIG_PACKAGE_kmod-usb2-pci=y
        CONFIG_PACKAGE_kmod-usb3=y
        CONFIG_PACKAGE_kmod-usb-acm=y
        CONFIG_PACKAGE_kmod-usb-net=y
        CONFIG_PACKAGE_kmod-usb-net-asix=y
        CONFIG_PACKAGE_kmod-usb-net-cdc-eem=y
        CONFIG_PACKAGE_kmod-usb-net-cdc-ether=y
        CONFIG_PACKAGE_kmod-usb-net-cdc-mbim=y
        CONFIG_PACKAGE_kmod-usb-net-cdc-ncm=y
        CONFIG_PACKAGE_kmod-usb-net-cdc-subset=y
        CONFIG_PACKAGE_kmod-usb-net-dm9601-ether=y
        CONFIG_PACKAGE_kmod-usb-net-hso=y
        CONFIG_PACKAGE_kmod-usb-net-ipheth=y
        CONFIG_PACKAGE_kmod-usb-net-kalmia=y
        CONFIG_PACKAGE_kmod-usb-net-kaweth=y
        CONFIG_PACKAGE_kmod-usb-net-mcs7830=y
        CONFIG_PACKAGE_kmod-usb-net-pegasus=y
        CONFIG_PACKAGE_kmod-usb-net-qmi-wwan=y
        CONFIG_PACKAGE_kmod-usb-net-rndis=y
        CONFIG_PACKAGE_kmod-usb-net-sierrawireless=y
        CONFIG_PACKAGE_kmod-usb-net-smsc95xx=y
        CONFIG_PACKAGE_kmod-usb-serial=y
        CONFIG_PACKAGE_kmod-usb-serial-ark3116=y
        CONFIG_PACKAGE_kmod-usb-serial-belkin=y
        CONFIG_PACKAGE_kmod-usb-serial-ch341=y
        CONFIG_PACKAGE_kmod-usb-serial-cp210x=y
        CONFIG_PACKAGE_kmod-usb-serial-cypress-m8=y
        CONFIG_PACKAGE_kmod-usb-serial-ftdi=y
        CONFIG_PACKAGE_kmod-usb-serial-ipw=y
        CONFIG_PACKAGE_kmod-usb-serial-keyspan=y
        CONFIG_PACKAGE_kmod-usb-serial-mct=y
        CONFIG_PACKAGE_kmod-usb-serial-mos7720=y
        CONFIG_PACKAGE_kmod-usb-serial-motorola-phone=y
        CONFIG_PACKAGE_kmod-usb-serial-option=y
        CONFIG_PACKAGE_kmod-usb-serial-oti6858=y
        CONFIG_PACKAGE_kmod-usb-serial-pl2303=y
        CONFIG_PACKAGE_kmod-usb-serial-qualcomm=y
        CONFIG_PACKAGE_kmod-usb-serial-sierrawireless=y
        CONFIG_PACKAGE_kmod-usb-serial-ti-usb=y
        CONFIG_PACKAGE_kmod-usb-serial-visor=y
        CONFIG_PACKAGE_kmod-usb-serial-wwan=y
        CONFIG_PACKAGE_ppp=y
        CONFIG_PACKAGE_uqmi=y
        CONFIG_PACKAGE_comgt=y
        CONFIG_PACKAGE_usb-modeswitch=y
        CONFIG_PACKAGE_luci=y
        CONFIG_PACKAGE_luci-app-multiwan=y
        CONFIG_PACKAGE_luci-proto-3g=y          
        CONFIG_PACKAGE_luci-proto-ppp=y
        EOF
        # 常用LuCI插件选择:
        cat >> .config <<EOF
        # CONFIG_PACKAGE_luci-app-adbyby-plus=y
        # CONFIG_PACKAGE_luci-app-aria2=y
        # CONFIG_PACKAGE_luci-app-baidupcs-web=y
        # CONFIG_PACKAGE_luci-app-docker=y
        # CONFIG_PACKAGE_luci-app-frpc=y
        # CONFIG_PACKAGE_luci-app-hd-idle=y          
        # CONFIG_PACKAGE_luci-app-kodexplorer=y
        # CONFIG_PACKAGE_luci-app-minidlna=y
        # CONFIG_PACKAGE_luci-app-openvpn=y
        # CONFIG_PACKAGE_luci-app-openvpn-server=y
        # CONFIG_PACKAGE_luci-app-qbittorrent=y
        CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Kcptun=y
        CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Shadowsocks=y
        CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Server=y
        CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Socks=y
        CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_V2ray=y
        CONFIG_PACKAGE_luci-app-ttyd=y
        CONFIG_PACKAGE_luci-app-v2ray-server=y
        CONFIG_PACKAGE_luci-app-verysync=y
        CONFIG_PACKAGE_luci-app-webadmin=y
        CONFIG_PACKAGE_luci-app-wireguard=y
        CONFIG_PACKAGE_luci-app-wrtbwmon=y
        EOF
        # LuCI主题:
        cat >> .config <<EOF
        CONFIG_PACKAGE_luci-theme-argon=y
        CONFIG_PACKAGE_luci-theme-netgear=y
        EOF
        # 常用软件包:
        cat >> .config <<EOF
        CONFIG_PACKAGE_curl=y
        CONFIG_PACKAGE_htop=y
        CONFIG_PACKAGE_nano=y
        CONFIG_PACKAGE_screen=y
        CONFIG_PACKAGE_tree=y
        CONFIG_PACKAGE_vim-fuller=y
        CONFIG_PACKAGE_wget=y
        EOF
        # 取消编译VMware镜像以及镜像填充 (不要删除被缩进的注释符号):
        cat >> .config <<EOF
        # CONFIG_TARGET_IMAGES_PAD is not set
        # CONFIG_VMDK_IMAGES is not set
        EOF
        # 
        # ========================固件定制部分结束========================
        # 
        sed -i 's/^[ \t]*//g' ./.config
    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        ../$DIY_P2_SH
    - name: SSH connection to Actions
      uses: P3TERX/debugger-action@master
      if: env.SSH_ACTIONS == 'true' || contains(github.event.action, 'ssh')

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "::set-output name=status::success"
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "::set-env name=DEVICE_NAME::_$(cat DEVICE_NAME)"
        echo "::set-env name=FILE_DATE::_$(date +"%Y%m%d%H%M")"
    - name: Upload bin directory
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "::set-env name=FIRMWARE::$PWD"
        echo "::set-output name=status::success"
    - name: Upload firmware directory
      uses: actions/upload-artifact@master
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Upload firmware to cowtransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_COWTRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress ${FIRMWARE} 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
    - name: Upload firmware to WeTransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_WETRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${FIRMWARE} 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
